const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function setupWhatsAppPermissions() {
  try {
    console.log('๐ ุฅุนุฏุงุฏ ุตูุงุญูุงุช ุงููุงุชุณุงุจ ููุฅุฏูู...\n');
    
    // 1. ุงูุจุญุซ ุนู ุตูุงุญูุฉ ูุงุชุณุงุจ ููุฌูุฏุฉ ุฃู ุฅูุดุงุคูุง
    let whatsappPrivilege = await prisma.privilege.findFirst({
      where: { name: 'WHATSAPP' }
    });
    
    if (!whatsappPrivilege) {
      console.log('๐ ุฅูุดุงุก ุตูุงุญูุฉ ูุงุชุณุงุจ ุฌุฏูุฏุฉ...');
      whatsappPrivilege = await prisma.privilege.create({
        data: {
          name: 'WHATSAPP',
          canRead: true,
          canWrite: true,
          canDelete: true,
          canEdit: true
        }
      });
      console.log(`โ ุชู ุฅูุดุงุก ุตูุงุญูุฉ ูุงุชุณุงุจ (ID: ${whatsappPrivilege.id})`);
    } else {
      console.log(`โ ุตูุงุญูุฉ ูุงุชุณุงุจ ููุฌูุฏุฉ (ID: ${whatsappPrivilege.id})`);
    }
    
    // 2. ุฅุนุทุงุก ุตูุงุญูุฉ ุงููุงุชุณุงุจ ูููุณุชุฎุฏู ุงูุฅุฏูู
    const adminUser = await prisma.user.findFirst({
      where: { role: 'ADMIN' }
    });
    
    if (!adminUser) {
      console.log('โ ูู ูุชู ุงูุนุซูุฑ ุนูู ูุณุชุฎุฏู ุฅุฏูู');
      return;
    }
    
    console.log(`๐ค ุงููุณุชุฎุฏู ุงูุฅุฏูู: ${adminUser.name} (${adminUser.email})`);
    
    // ุงูุชุญูู ูู ูุฌูุฏ ุงูุตูุงุญูุฉ
    const existingPermission = await prisma.userPrivilege.findFirst({
      where: {
        userId: adminUser.id,
        privilegeId: whatsappPrivilege.id,
        area: 'WHATSAPP'
      }
    });
    
    if (!existingPermission) {
      console.log('๐ ุฅุถุงูุฉ ุตูุงุญูุฉ ูุงุชุณุงุจ ููุฅุฏูู...');
      await prisma.userPrivilege.create({
        data: {
          userId: adminUser.id,
          privilegeId: whatsappPrivilege.id,
          area: 'WHATSAPP'
        }
      });
      console.log('โ ุชู ุฅุนุทุงุก ุตูุงุญูุงุช ูุงุชุณุงุจ ููุฅุฏูู');
    } else {
      console.log('โ ุงูุฅุฏูู ูุฏูู ุตูุงุญูุงุช ูุงุชุณุงุจ ูุณุจูุงู');
    }
    
    // 3. ุงูุชุญูู ูู ุงููุชูุฌุฉ
    const adminWithPermissions = await prisma.user.findUnique({
      where: { id: adminUser.id },
      include: {
        privileges: {
          where: { area: 'WHATSAPP' },
          include: { privilege: true }
        }
      }
    });
    
    console.log('\n๐ ุตูุงุญูุงุช ุงููุงุชุณุงุจ ููุฅุฏูู:');
    if (adminWithPermissions.privileges.length > 0) {
      adminWithPermissions.privileges.forEach(up => {
        console.log(`โ ${up.privilege.name} - ูุฑุงุกุฉ: ${up.privilege.canRead}, ูุชุงุจุฉ: ${up.privilege.canWrite}, ุชุนุฏูู: ${up.privilege.canEdit}, ุญุฐู: ${up.privilege.canDelete}`);
      });
    } else {
      console.log('โ ูุง ุชูุฌุฏ ุตูุงุญูุงุช ูุงุชุณุงุจ');
    }
    
    console.log('\n๐ ุชู ุฅุนุฏุงุฏ ุตูุงุญูุงุช ุงููุงุชุณุงุจ ุจูุฌุงุญ!');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅุนุฏุงุฏ ุงูุตูุงุญูุงุช:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

setupWhatsAppPermissions();
